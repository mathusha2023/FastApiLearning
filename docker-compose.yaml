name: "FastAPI"

services:

  minio:
    container_name: minio
    image: minio/minio
    entrypoint: sh
    command: >
      -c 'mkdir -p /data/bucket
      && minio server /data'
    ports:
      - "9000:9000"
      - "9001:9001"
    expose:
      - 9000
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: 123456789
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9001"
    volumes:
      - minio_data:/data  # Volume для хранения данных MinIO
    healthcheck:
      test: [ "CMD", "sh", "-c", "mc alias set myminio http://localhost:9000 user 123456789 && mc ls myminio" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    container_name: database
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volume для хранения данных PostgreSQL
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - database

  api:
    container_name: api
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    expose:
      - 8000
    volumes:
      - ./:/app  # Volume для монтирования кода приложения (для разработки)
      - api_static:/app/static  # Volume для статических файлов (если нужно)
    depends_on:
      - database
      - minio

# Определение volumes
volumes:
  minio_data:
    driver: local
  postgres_data:
    driver: local
  api_static:
    driver: local